default:
  image: antonio3a/ubuntu:24.04-dev-tools
  tags:
    - 3A
    - AAA

stages:
  - check
  - build
  - release
  - deploy

variables:
  IMAGE_DEV_TAG: $CI_REGISTRY_IMAGE:dev
  IMAGE_PROD_TAG: $CI_REGISTRY_IMAGE:prod

check:
  stage: check
  script:
    - docker -v
    - node -v
    - npm -v
    - java --version
    - mvn --version
    - gradle --version

build-dev:
  stage: build
  only:
    - develop
  cache:
    key: node_modules
    paths:
      - node_modules
  script:
    - npm install
    - npm install -g @angular/cli
    - ng build --configuration development
    - docker build --provenance false -t $IMAGE_DEV_TAG .

build-prod:
  stage: build
  only:
    - main
  cache:
    key: node_modules
    paths:
      - node_modules
  script:
    - npm install
    - npm install -g @angular/cli
    - ng build --configuration production
    - docker build --provenance false -t $IMAGE_PROD_TAG .

release-dev:
  stage: release
  only:
    - develop
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker push $IMAGE_DEV_TAG

release-prod:
  stage: release
  only:
    - main
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker push $IMAGE_PROD_TAG

deploy-dev:
  stage: deploy
  only:
    - develop
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker compose -f docker-compose-dev.yaml pull
    - docker compose -f docker-compose-dev.yaml down
    - docker compose -f docker-compose-dev.yaml up -d

deploy-prod:
  stage: deploy
  only:
    - main
  variables:
    SSH_CONFIG: "-i $3A_SSH_PRIVATE_KEY -o StrictHostKeyChecking=no"
    SSH_PORT: $3A_VM_SSH_PORT
    SSH_USER_HOST: "$3A_VM_USERNAME@$SSE_APPS_VM_IP"
  before_script:
    - chmod og= $GB_SSH_PRIVATE_KEY
    - echo $CI_REGISTRY_PASSWORD | ssh $SSH_CONFIG -p $SSH_PORT $SSH_USER_HOST docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - export TEMP_DIR=$(ssh $SSH_CONFIG -p $SSH_PORT $SSH_USER_HOST "mktemp -d /tmp/XXXXXXXXXXXXXXXXXXXX")
    - scp $SSH_CONFIG -P $SSH_PORT docker-compose-prod.yaml $SSH_USER_HOST:$TEMP_DIR/
    - ssh $SSH_CONFIG -p $SSH_PORT $SSH_USER_HOST docker compose -f $TEMP_DIR/docker-compose-prod.yaml pull
    - ssh $SSH_CONFIG -p $SSH_PORT $SSH_USER_HOST docker compose -f $TEMP_DIR/docker-compose-prod.yaml -p $CI_PROJECT_NAME down
    - ssh $SSH_CONFIG -p $SSH_PORT $SSH_USER_HOST docker compose -f $TEMP_DIR/docker-compose-prod.yaml -p $CI_PROJECT_NAME up -d
    - ssh $SSH_CONFIG -p $SSH_PORT $SSH_USER_HOST rm -rf $TEMP_DIR
